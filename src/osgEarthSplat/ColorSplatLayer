/* -*-c++-*- */
/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_COLOR_SPLAT_SPLAT_LAYER_H
#define OSGEARTH_COLOR_SPLAT_SPLAT_LAYER_H

#include "Export"
#include <osgEarth/VisibleLayer>
#include <osgEarth/ImageLayer>
#include <osgEarth/LayerReference>


namespace osgEarth { namespace Splat
{
    //! Layer that renders geotypical textures on the terrain based on
    //! classification data ("texture splatting").
    class OSGEARTHSPLAT_EXPORT ColorSplatLayer : public VisibleLayer
    {
    public:
        class OSGEARTHSPLAT_EXPORT Options : public VisibleLayer::Options
        {
        public:
            META_LayerOptions(osgEarth, Options, VisibleLayer::Options);
            OE_OPTION_LAYER(ImageLayer, colorLayer);
            // detail texture.
            Config getConfig() const override;

            optional<URI> _detailGreenImageURI;
            optional<URI> _detailBaseImageURI;

        private:
            void fromConfig(const Config& conf);
           
        };
        //! Serialize
        Config getConfig() const override;

    public:
        META_Layer(osgEarthSplat, ColorSplatLayer, Options, VisibleLayer, ColorSplatImage);

    protected:

        //! Override post-ctor init
        virtual void init() override;
        virtual Status openImplementation() override;
        virtual void prepareForRendering(TerrainEngine*) override;

        

        ImageLayer* getColorLayer() const;

    public:

        //! Called when this layer is added to the map
        virtual void addedToMap(const Map* map) override;
        virtual void removedFromMap(const Map* map) override;

    public:

        virtual void resizeGLObjectBuffers(unsigned maxSize) override;
        virtual void releaseGLObjects(osg::State* state) const override;

    protected:
        virtual ~ColorSplatLayer() { }
        TextureImageUnitReservation _detailBinding;
    };

} } 

#endif
