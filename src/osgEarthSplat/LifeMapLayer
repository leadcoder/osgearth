/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* MIT License
*/
#ifndef OSGEARTH_SPLAT_LIFE_MAP_LAYER_H
#define OSGEARTH_SPLAT_LIFE_MAP_LAYER_H

#include "Export"
#include "BiomeLayer"
#include <osgEarth/ImageLayer>
#include <osgEarth/ElevationPool>
#include <osgEarth/LayerReference>

namespace osgEarth {
    class TextureArena;
}

namespace osgEarth { namespace Splat
{
    using namespace osgEarth;

    class OSGEARTHSPLAT_EXPORT LifeMapLayer : public ImageLayer
    {
    public:
        class OSGEARTHSPLAT_EXPORT Options : public ImageLayer::Options
        {
        public:
            META_LayerOptions(osgEarth, Options, ImageLayer::Options);
            OE_OPTION_LAYER(BiomeLayer, biomes);
            virtual Config getConfig() const;
        private:
            void fromConfig(const Config& conf);
        };

    public:
        META_Layer(osgEarthSplat, LifeMapLayer, Options, ImageLayer, LifeMap);

        BiomeLayer* getBiomeLayer() const;

    protected:

        virtual void init() override;

        virtual Status openImplementation() override;

        virtual Status closeImplementation() override;

        virtual GeoImage createImageImplementation(const TileKey&, ProgressCallback*) const override;

    public:

        virtual void addedToMap(const Map* map) override; 

        virtual void removedFromMap(const Map* map) override;

    protected:

        virtual ~LifeMapLayer() { }

        osg::observer_ptr<const Map> _map;
        mutable ElevationPool::WorkingSet _workingSet;

        osg::ref_ptr<osg::Image> _noiseFunc;
        osg::ref_ptr<TextureArena> _arena;

        void loadMaterials(const std::string& albedo);

        int lookupBiome(double x, double y, float noise) const;
    };

} } // namespace osgEarth::Splat

#endif // OSGEARTH_SPLAT_LIFE_MAP_LAYER_H
