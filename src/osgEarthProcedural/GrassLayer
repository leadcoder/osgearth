/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* MIT License
*/
#ifndef OSGEARTH_PROCEDURAL_GRASS_LAYER_H
#define OSGEARTH_PROCEDURAL_GRASS_LAYER_H

#include "GroundCoverLayer"
#include <osgEarth/LayerReference>

namespace osgEarth { namespace Procedural
{
    using namespace osgEarth;

    //! Layer that renders grass.
    class OSGEARTHPROCEDURAL_EXPORT GrassLayer : public GroundCoverLayer
    {
    public:
        class OSGEARTHPROCEDURAL_EXPORT Options : public GroundCoverLayer::Options {
        public:
            META_LayerOptions(osgEarth, Options, GroundCoverLayer::Options);
            virtual Config getConfig() const;
        private:
            void fromConfig(const Config& conf);
        };

    public:
        META_Layer(osgEarth, GrassLayer, Options, GroundCoverLayer, Grass);

    public: // Layer
        virtual void init();

    protected:
        virtual ~GrassLayer() { }

        virtual void loadRenderingShaders(
            VirtualProgram* vp, 
            const osgDB::Options* options) const;

        virtual osg::Node* createParametricGeometry(
            std::vector<osg::Texture*>& textures) const override;
    };

} } // namespace osgEarth::Procedural
OSGEARTH_SPECIALIZE_CONFIG(osgEarth::Procedural::GrassLayer::Options);

#endif // OSGEARTH_PROCEDURAL_GRASS_LAYER_H
