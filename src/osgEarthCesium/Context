/* -*-c++-*- */
/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_CESIUM_CONTEXT_H
#define OSGEARTH_CESIUM_CONTEXT_H

#include "CesiumTilesetNode"
#include <CesiumGltf/Material.h>

#include "AssetAccessor"
#include "PrepareRenderResources"
#include "TaskProcessor"

#include <gsl/gsl>
#include <Cesium3DTilesSelection/GltfUtilities.h>
#include <Cesium3DTilesSelection/registerAllTileContentTypes.h>
#include <CesiumGltf/AccessorView.h>
#include <Cesium3DTilesSelection/Tileset.h>
#include <Cesium3DTilesSelection/IonRasterOverlay.h>
#include <CesiumAsync/AsyncSystem.h>

#include <glm/gtc/type_ptr.hpp>

#include <spdlog/spdlog.h>

namespace osgEarth {
    namespace Cesium
    {
        using namespace osgEarth;

        class Context
        {
        public:

            Context();

            ~Context();

            void shutdown();

            static Context& instance();
            
            std::shared_ptr< PrepareRendererResources > prepareRenderResources;
            std::shared_ptr<AssetAccessor> assetAccessor;
            std::shared_ptr<TaskProcessor> taskProcessor;
            std::shared_ptr< spdlog::logger > logger;
            std::shared_ptr< Cesium3DTilesSelection::CreditSystem > creditSystem;
            CesiumAsync::AsyncSystem asyncSystem;
            std::unique_ptr<Context> context;
        };
    }
}


#endif // OSGEARTH_CESIUM_CONTEXT_H
