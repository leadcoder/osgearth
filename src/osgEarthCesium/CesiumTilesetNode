/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* MIT License
*/
#ifndef OSGEARTH_CESIUM_TILESETNODE_H
#define OSGEARTH_CESIUM_TILESETNODE_H

#include "Export"
#include <osg/Group>

namespace osgEarth { namespace Cesium
{
    using namespace osgEarth;

    class OSGEARTHCESIUM_EXPORT CesiumTilesetNode : public osg::Group
    {
    public:
        CesiumTilesetNode(unsigned int assetID, const std::string& server = "", const std::string& token = "", float maximumScreenSpaceError = 16.0f, std::vector<int> overlays = std::vector<int>());
        CesiumTilesetNode(const std::string& url, const std::string& server = "", const std::string& token = "", float maximumScreenSpaceError = 16.0f, std::vector<int> overlays = std::vector<int>());

        ~CesiumTilesetNode();

        virtual void traverse(osg::NodeVisitor& nv);

        osg::BoundingSphere computeBound() const override;

        float getMaximumScreenSpaceError() const;
        void setMaximumScreenSpaceError(float maximumScreenSpaceError);

        bool getForbidHoles() const;
        void setForbidHoles(bool forbidHoles);

    private:        
        void* _tileset = nullptr;
    };
} }


#endif // OSGEARTH_CESIUM_TILESETNODE_H
