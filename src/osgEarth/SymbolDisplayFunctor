/* osgEarth
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * MIT License
 */

#ifndef OSGEARTHSYMBOLOGY_SYMBOL_DISPLAY_FUNCTOR_H
#define OSGEARTHSYMBOLOGY_SYMBOL_DISPLAY_FUNCTOR_H 1

#include <osgEarthSymbology/Common>
#include <osgEarthSymbology/Symbol>
#include <osg/Referenced>

namespace osgEarth { namespace Symbology
{

    /**
     * Interface for an object that Display a symbol
     */
    class OSGEARTHSYMBOLOGY_EXPORT SymbolDisplayFunctor : public osg::Object
    {
    public:
        META_Object(osgEarthSymbology,SymbolDisplayFunctor);

        SymbolDisplayFunctor(const SymbolDisplayFunctor&, const osg::CopyOp&) {}
        SymbolDisplayFunctor() {}

        virtual osg::Node* apply(const Symbol& ) { return 0;}

    };

} } // namespace osgEarth::Symbology

#endif
