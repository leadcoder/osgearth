/* osgEarth
 * Copyright 2025 Pelican Mapping
 * MIT License
 */

#ifndef OSGEARTHFEATURES_SCATTER_FILTER_H
#define OSGEARTHFEATURES_SCATTER_FILTER_H 1

#include <osgEarth/Common>
#include <osgEarth/Filter>
#include <osgEarth/Random>

namespace osgEarth
{
    /**
     * Feature filter that will take source feature and scatter points within
     * that feature. It will either scatter points randomly (the default), or
     * at fixed intervals, based on the density.
     */
    class OSGEARTH_EXPORT ScatterFilter : public FeatureFilter
    {
    public:
        // Call this determine whether this filter is available.
        static bool isSupported() { return true; }

    public:
        ScatterFilter();

        virtual ~ScatterFilter() { }

        /** Approximate instances per sqkm. */
        void setDensity( float value ) { _density = value; }
        float getDensity() const { return _density; }

        /** Whether to randomly scatter (as opposed to a fixed interval scatter) */
        void setRandom( bool value ) { _random = value; }
        bool getRandom() const { return _random; }

        /** Seed value for the random number generator */
        void setRandomSeed( unsigned value ) { _randomSeed = value; }
        unsigned getRandomSeed() const { return _randomSeed; }

    public:
        /** Processes a new feature list */
        virtual FilterContext push( FeatureList& input, FilterContext& context );

    protected:
        void polyScatter(
            const Geometry*         input,
            const SpatialReference* inputSRS,
            const FilterContext&    context, 
            PointSet*               output);

        void lineScatter(
            const Geometry*         input,
            const SpatialReference* inputSRS,
            const FilterContext&    context, 
            PointSet*               output);


    private:
        float    _density;
        bool     _random;
        unsigned _randomSeed;
        Random   _prng;
    };
} // namespace osgEarth

#endif // OSGEARTHFEATURES_SUBSTITUTE_MODEL_FILTER_H
