/* osgEarth
* Copyright 2008-2012 Pelican Mapping
* MIT License
*/
#ifndef OSGEARTH_PHONG_LIGHTING_EFFECT_H
#define OSGEARTH_PHONG_LIGHTING_EFFECT_H

#include <osgEarth/Common>
#include <osg/StateSet>
#include <osg/Uniform>
#include <osg/observer_ptr>
#include <osg/Group>

namespace osgEarth { namespace Util
{
    /**
     * Shader effect that performs simple Phong lighting.
     */
    class OSGEARTH_EXPORT PhongLightingEffect : public osg::Referenced
    {
    public:
        /** constructs a new effect */
        PhongLightingEffect();

        /** contructs a new effect and attaches it to a stateset. */
        PhongLightingEffect(osg::StateSet* stateset);

        /** is it supported by the h/w? */
        bool supported() const { return _supported; }

    public:
        /** attach this effect to a stateset. */
        void attach(osg::StateSet* stateset);

        /** detach this effect from any attached statesets. */
        void detach();

        /** detach this effect from a stateset. */
        void detach(osg::StateSet* stateset);

    protected:
        virtual ~PhongLightingEffect();

        typedef std::list< osg::observer_ptr<osg::StateSet> > StateSetList;

        bool _supported;
        StateSetList _statesets;
        //osg::ref_ptr<osg::Uniform> _lightingUniform;

        void init();
    };


    class OSGEARTH_EXPORT PhongLightingGroup : public osg::Group
    {
    public:
        PhongLightingGroup();
    private:
        osg::ref_ptr< PhongLightingEffect> _effect;
    };    

} } // namespace osgEarth::Util

#endif // OSGEARTH_PHONG_LIGHTING_EFFECT_H
